self.__next_f.push([1,"import { state } from 'state';\n\nconst UPGRADE_THRESHOLD = 10; // Kills needed to trigger upgrade screen\n\n// A master list of all possible upgrades. We'll add more later.\nconst allUpgrades = [\n    { id: 'health_boost', name: 'Health Boost', description: '+50 Max Health' },\n    { id: 'infinite_ammo', name: 'Infinite Ammo', description: 'Never run out of bullets for 30s' },\n    { id: 'jetpack', name: 'Jetpack', description: 'Hold Space to fly' },\n    { id: 'fast_swing', name: 'Swift Sword', description: 'Swing your sword 50% faster' },\n    { id: 'damage_up', name: 'Bigger Bullets', description: 'Your bullets deal more damage' },\n    { id: 'move_speed', name: 'Speed Cola', description: 'Move 25% faster' },\n];\n\n// This function will be called when the player reaches the kill threshold\nexport function triggerUpgradeSelection() {\n    state.killsSinceLastUpgrade = 0; // Reset counter\n    \n    // Pause the game\n    state.isGamePaused = true;\n    document.exitPointerLock();\n\n    // Randomly select 3 unique upgrades\n    const shuffled = [...allUpgrades].sort(() =\u003e 0.5 - Math.random());\n    state.upgradesToShow = shuffled.slice(0, 3);\n    \n    state.isUpgradeScreenVisible = true;\n}\n\n// This will be called when an upgrade is chosen from the UI\nexport function applyUpgrade(upgradeId) {\n    console.log(`Applying upgrade: ${upgradeId}`);\n    switch (upgradeId) {\n        case 'health_boost':\n            state.maxPlayerHealth += 50;\n            state.playerHealth += 50; // Heal the player by the same amount\n            break;\n        case 'move_speed':\n            if (state.physics) {\n                state.physics.playerSpeed += 5; // Increase the base speed\n            }\n            break;\n        case 'fast_swing':\n            state.swordSwingCooldown *= 0.5; // Reduce cooldown by 50%\n            break;\n        case 'damage_up':\n            state.gunDamage *= 1.5; // Increase damage by 50%\n            state.bulletSize *= 1.5; // Visually increase bullet size\n            break;\n        case 'infinite_ammo':\n            state.infiniteAmmoActive = true;\n            state.infiniteAmmoTimer = 30; // 30 seconds\n            break;\n        case 'jetpack':\n            state.jetpackUnlocked = true;\n            break;\n        // Other cases will go here later\n    }\n\n    // Unpause the game and hide the screen\n    state.isGamePaused = false;\n    state.isUpgradeScreenVisible = false;\n    // We'll need to re-request pointer lock, which we'll handle in main.js\n}\n\nexport function checkKillCountForUpgrade() {\n    state.killsSinceLastUpgrade++;\n    if (state.killsSinceLastUpgrade \u003e= UPGRADE_THRESHOLD) {\n        triggerUpgradeSelection();\n    }\n}"])