self.__next_f.push([1,"import * as THREE from 'three';\nimport { state } from 'state';\n\nexport const scene = new THREE.Scene();\nexport const camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\nlet renderer; // Keep renderer reference accessible\n\nexport function setupRenderer() {\n  const container = document.getElementById('renderDiv');\n  renderer = new THREE.WebGLRenderer({ antialias: true }); // Assign to the outer scope variable\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.shadowMap.enabled = true; // Enable shadows\n  renderer.shadowMap.type = THREE.VSMShadowMap; // Softer shadows\n  renderer.toneMapping = THREE.ACESFilmicToneMapping; // Better color\n\n  function resize() {\n    const { innerWidth: w, innerHeight: h } = window;\n    camera.aspect = w / h;\n    camera.updateProjectionMatrix();\n    renderer.setSize(w, h); // Removed false, let it update style\n  }\n  window.addEventListener('resize', resize);\n  resize(); // Initial size setup\n\n  container.appendChild(renderer.domElement);\n\n  camera.rotation.order = 'YXZ';\n  scene.background = new THREE.Color(0x88ccee);\n  scene.fog = new THREE.Fog(0x88ccee, 0, 50);\n\n  // Lighting\n  scene.add(new THREE.HemisphereLight(0x8dc1de, 0x00668d, 1.5));\n  const dir = new THREE.DirectionalLight(0xffffff, 2.5);\n  dir.position.set(-5, 25, -1);\n  dir.castShadow = true;\n  // Configure shadow camera for better quality/performance\n  dir.shadow.camera.near = 0.1;\n  dir.shadow.camera.far = 50;\n  dir.shadow.camera.right = 15;\n  dir.shadow.camera.left = -15;\n  dir.shadow.camera.top = 15;\n  dir.shadow.camera.bottom = -15;\n  dir.shadow.mapSize.width = 1024;\n  dir.shadow.mapSize.height = 1024;\n  dir.shadow.radius = 4; // Soften shadow edges\n  dir.shadow.bias = -0.0001; // Adjust bias to prevent shadow acne\n  scene.add(dir);\n\n  state.clock = new THREE.Clock();\n\n  // Return camera and scene along with renderer\n  return { renderer, camera, scene };\n}\n\n// Use the renderer reference from the outer scope\nexport function renderFrame() {\n  if (renderer) {\n    renderer.render(scene, camera);\n  } else {\n    console.error(\"Renderer not initialized yet!\");\n  }\n}"])