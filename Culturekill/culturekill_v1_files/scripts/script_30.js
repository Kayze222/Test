self.__next_f.push([1,"24:T55e,import { state } from 'state';\nexport function setupInput(camera) {\n  const k = state.key;\n  const canvas = document.getElementById('renderDiv'); // Target the container div\n\n  window.addEventListener('keydown', e =\u003e {\n      k[e.code] = true;\n      // Handle weapon switching\n      if (e.code === 'Digit1') state.activeWeapon = 'gun';\n      if (e.code === 'Digit2') state.activeWeapon = 'sword';\n      if (e.code === 'Escape' \u0026\u0026 state.isGameStarted \u0026\u0026 !state.isGameOver \u0026\u0026 !state.isUpgradeScreenVisible) {\n          state.isGamePaused = !state.isGamePaused;\n          state.isPauseMenuVisible = state.isGamePaused;\n          if (state.isGamePaused) {\n              document.exitPointerLock();\n          } else {\n              document.body.requestPointerLock();\n          }\n      }\n  });\n  window.addEventListener('keyup', e =\u003e k[e.code] = false);\n\n  canvas.addEventListener('mousedown', () =\u003e {\n    document.body.requestPointerLock();\n  });\n\n  document.addEventListener('mousemove', (event) =\u003e {\n    if (document.pointerLockElement === document.body \u0026\u0026 camera) {\n      camera.rotation.y -= (event.movementX / 500) * state.mouseSensitivity;\n      camera.rotation.x -= (event.movementY / 500) * state.mouseSensitivity;\n      // Clamp vertical rotation to avoid flipping\n      camera.rotation.x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, camera.rotation.x));\n    }\n  });\n}25:T128b,"])